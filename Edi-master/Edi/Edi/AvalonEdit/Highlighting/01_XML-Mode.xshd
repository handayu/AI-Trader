<!--
// Dirkster99 BugFix for documentation of sample
Define a highlighting pattern for XML and
apply the same pattern to other file types as defined in the extensions attribute below (these also contain XML).

Changing the extensions attribute here may also require
adjustment of the extensions listed in Resources.c/RegisterBuiltInHighlightings
-->
<SyntaxDefinition name="XML" extensions=".aml;.xml;.xsl;.xslt;.xsd;.manifest;.config;.addin;.xshd;.wxs;.wxi;.wxl;.proj;.csproj;.drproj;.vbproj;.ilproj;.booproj;.build;.xfrm;.targets;.xaml;.xpt;.xft;.map;.wsdl;.disco;.ps1xml;.nuspec;.resx;.StyleCop" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
  <Color name="Comment"        foreground="Green"       exampleText="&lt;!-- comment --&gt;" />
  <Color name="CData"          foreground="Blue"        exampleText="&lt;![CDATA[data]]&gt;" />
  <Color name="DocType"        foreground="Blue"        exampleText="&lt;!DOCTYPE rootElement&gt;" />
  <Color name="XmlDeclaration" foreground="Blue"        exampleText='&lt;?xml version="1.0"?&gt;' />
  <Color name="XmlTag"         foreground="DarkMagenta" exampleText='&lt;tag attribute="value" /&gt;' />
  <Color name="AttributeName"  foreground="Red"         exampleText='&lt;tag attribute="value" /&gt;' />
  <Color name="AttributeValue" foreground="Blue"        exampleText='&lt;tag attribute="value" /&gt;' />
  <Color name="Entity"         foreground="Teal"        exampleText="index.aspx?a=1&amp;amp;b=2" />
  <Color name="BrokenEntity"   foreground="Olive"       exampleText="index.aspx?a=1&amp;b=2" />

  <Color name="CommentMarkerSetTodo"       foreground="Red"     fontWeight="bold"/>
  <Color name="CommentMarkerSetHackUndone" foreground="#E0E000" fontWeight="bold"/>

  <RuleSet name="CommentMarkerSet">
    <Keywords color="CommentMarkerSetTodo">
      <Word>TODO</Word>
      <Word>FIXME</Word>
    </Keywords>
    <Keywords color="CommentMarkerSetHackUndone">
      <Word>HACK</Word>
      <Word>UNDONE</Word>
    </Keywords>
  </RuleSet>

  <RuleSet>
    <Span color="Comment" ruleSet="CommentMarkerSet" multiline="true">
      <Begin>&lt;!--</Begin>
      <End>--&gt;</End>
    </Span>
    <Span color="CData" multiline="true">
      <Begin>&lt;!\[CDATA\[</Begin>
      <End>]]&gt;</End>
    </Span>
    <Span color="DocType" multiline="true">
      <Begin>&lt;!DOCTYPE</Begin>
      <End>&gt;</End>
    </Span>
    <Span color="XmlDeclaration" multiline="true">
      <Begin>&lt;\?</Begin>
      <End>\?&gt;</End>
    </Span>
    <Span color="XmlTag" multiline="true">
      <Begin>&lt;</Begin>
      <End>&gt;</End>
      <RuleSet>
        <!-- Treat the position before '<' as end, as that's not a valid character
				     in attribute names and indicates the user forgot a closing quote. -->
        <Span color="AttributeValue" multiline="true" ruleSet="EntitySet">
          <Begin>"</Begin>
          <End>"|(?=&lt;)</End>
        </Span>
        <Span color="AttributeValue" multiline="true" ruleSet="EntitySet">
          <Begin>'</Begin>
          <End>'|(?=&lt;)</End>
        </Span>
        <Rule color="AttributeName">[\d\w_\-\.]+(?=(\s*=))</Rule>
        <Rule color="AttributeValue">=</Rule>
      </RuleSet>
    </Span>
    <Import ruleSet="EntitySet"/>
  </RuleSet>

  <RuleSet name="EntitySet">
    <Rule color="Entity">
      &amp;
      [\w\d\#]+
      ;
    </Rule>

    <Rule color="BrokenEntity">
      &amp;
      [\w\d\#]*
      #missing ;
    </Rule>
  </RuleSet>
</SyntaxDefinition>